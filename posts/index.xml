<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Lurey dot Dev</title><link>https://lurey.dev/posts/</link><description>Lurey dot Dev (Posts)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 14 Mar 2021 13:36:50 -0700</lastBuildDate><atom:link href="https://lurey.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started With Godot and VSCode</title><link>https://lurey.dev/posts/getting-started-with-godot-and-vscode/</link><pubDate>Sun, 14 Mar 2021 13:36:50 -0700</pubDate><guid>https://lurey.dev/posts/getting-started-with-godot-and-vscode/</guid><description>&lt;p>It&amp;rsquo;s been a while since I wrote anything: it&amp;rsquo;s not that I haven&amp;rsquo;t been writing,
but rather I&amp;rsquo;ve created a split-off community-run blog for Star Wars: Legion,
and it&amp;rsquo;s taken a bit of time to want to come back to general blogging.&lt;/p>
&lt;p>I&amp;rsquo;ve been thinking about creating a new game/project, mostly as a learning
experience, and partially as something to do during this perpetual WFH period.
Instead of reflexively falling back on a technology I&amp;rsquo;m comfortable with (i.e.
React/TSX or Dart/Flutter), I&amp;rsquo;ve decided to try out &lt;a href="https://godotengine.org/">Godot&lt;/a>, an open source
and full-featured game engine with both 2D and 3D support.&lt;/p>
&lt;p>Of course, I wasn&amp;rsquo;t fully satisfied with learning or using &lt;a href="https://docs.godotengine.org/en/stable/getting_started/scripting/gdscript/gdscript_basics.html">GDScript&lt;/a> - it
seems interesting enough, but I wanted to use a statically typed high-level
language, and I wanted to use VSCode - so this is a good opportunity for &lt;a href="https://docs.godotengine.org/en/stable/getting_started/scripting/c_sharp/index.html">C#&lt;/a>.&lt;/p>
&lt;hr>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>I&amp;rsquo;m a fan of the package manager &lt;a href="https://scoop-docs.now.sh/">Scoop&lt;/a>, a simple command-line installer:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">scoop add extras
scoop install godot-mono
scoop install mono
&lt;/code>&lt;/pre>&lt;/div>&lt;p>A few minutes later, Godot and Mono were installed. You can also install them
with &lt;code>.exe&lt;/code> installers available on their site, but that&amp;rsquo;s totally your choice.
I already had &lt;a href="https://code.visualstudio.com/">VSCode&lt;/a> installed, but if you don&amp;rsquo;t have it, I recommend it.&lt;/p>
&lt;p>You&amp;rsquo;ll need the following &lt;em>extensions&lt;/em> for VSCode:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csharp">C# for Visual Studio Code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.mono-debug">Mono Debug&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://marketplace.visualstudio.com/items?itemName=geequlim.godot-tools">Godot Tools&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="create-a-new-project">Create a new project&lt;/h2>
&lt;p>Open the &lt;em>Godot Editor&lt;/em>, and hit &lt;strong>New Project&lt;/strong>. I called mine
&lt;code>GodotRogueDemo&lt;/code>.&lt;/p>
&lt;p>I did nothing else within the &lt;em>Godot Editor&lt;/em>, and then opened the newly created
folder in VSCode, and hit &lt;code>F1&lt;/code> - this opens the quick launcher for VSCode, and
I typed &lt;strong>Godot &amp;gt; Godot Tools: Open workspace with Godot Editor&lt;/strong>.&lt;/p>
&lt;p>You&amp;rsquo;ll then need, once, to tell the VSCode extension where &lt;em>Godot&lt;/em> is installed.
Fortunately due to using &lt;code>scoop&lt;/code>, this is a canonical location - so for me it
was &lt;code>C:\Users\Matan\scoop\apps\godot-mono\current\godot.exe&lt;/code>, but you might have
it installed elsewhere.&lt;/p>
&lt;h2 id="create-a-scene-and-sprite">Create a scene and sprite&lt;/h2>
&lt;p>I created a new 2D scene, and dragged an instance of &lt;code>icon.png&lt;/code> over, and then
hit &lt;strong>Right Click -&amp;gt; Attach Script&lt;/strong>, and chose &lt;strong>C#&lt;/strong>. The script ending up
looking like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cs" data-lang="cs">&lt;span style="color:#66d9ef">using&lt;/span> Godot;
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Icon&lt;/span> : Sprite
{
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> _Ready()
{
GD.Print(&lt;span style="color:#e6db74">&amp;#34;Hello World&amp;#34;&lt;/span>);
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To make debugging available in VSCode, I went, in the Godot Editor, to
&lt;strong>Project &amp;gt; Project Settings&lt;/strong>, scrolled down to &lt;strong>Mono &amp;gt; Debugger Agent&lt;/strong>, and
enabled the checkbox &lt;strong>Wait for Debugger&lt;/strong>. I also bumped the timeout to &lt;code>10000&lt;/code>
and copied the port to reference in VSCode (mine was &lt;code>23685&lt;/code>).&lt;/p>
&lt;p>Back into VSCode, I went into the &lt;strong>Run and Debug&lt;/strong> menu, and created a new
configuration for &lt;strong>C# Mono&lt;/strong> - my &lt;code>launch.json&lt;/code> looks like this, but yours will
likely look very similar:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#f92672">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0.2.0&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;configurations&amp;#34;&lt;/span>: [
{
&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Launch&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;mono&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;request&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;launch&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;program&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${workspaceRoot}/program.exe&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;cwd&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${workspaceRoot}&amp;#34;&lt;/span>
},
{
&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Attach&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;mono&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;request&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;attach&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;address&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;localhost&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;port&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">23685&lt;/span>
}
]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Save your scene and script, and now it is possible to launch your Godot demo
project, and attach the debugger from VSCode. This isn&amp;rsquo;t a completely seamless
experience (I&amp;rsquo;m hoping to mess around with &lt;code>launch.json&lt;/code> more in the near future
and create a specific &amp;ldquo;debug&amp;rdquo; task that automates much of this), but it works!&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/168174/111084722-090fe500-84d1-11eb-891e-ddf1d8fd2390.png" alt="Demo">&lt;/p></description></item><item><title>A New Hope</title><link>https://lurey.dev/posts/welcome/</link><pubDate>Fri, 07 Aug 2020 12:48:03 -0700</pubDate><guid>https://lurey.dev/posts/welcome/</guid><description>&lt;p>&lt;img src="https://lurey.dev/lego_landspeeder.jpg" alt="Lego Star Wars Landspeeder">&lt;/p>
&lt;p>It&amp;rsquo;s a few months into the COVID 19 quarantine, where I&amp;rsquo;m perpetually stuck in
permanent WFH (&amp;ldquo;work from home&amp;rdquo;), and I&amp;rsquo;ve decided to take the opportunity to
restart my blog. I&amp;rsquo;ve had a blog in the past, and used it to talk about tech,
politics, and nerd culture, but I haven&amp;rsquo;t maintained anything serious in years.&lt;/p>
&lt;p>I think writing a blog will help me focus on my side projects - giving me a
reason to have something close to &amp;ldquo;deliverables&amp;rdquo; (i.e. I need to be able to
produce &lt;em>something&lt;/em> visible to be able to blog about it), as well as an outlet
to write on something that isn&amp;rsquo;t Twitter or personal Discord(s).&lt;/p>
&lt;p>Originally I thought about creating separate blogs for separate topics, but I
want to reduce the barrier of me writing to an absolute minimum - my goal here
isn&amp;rsquo;t to get a hundred readers, I just want to write a hundred posts. So if
you&amp;rsquo;re reading this (thanks!), know that I am unlikely to be consistent, but
will try to &amp;ldquo;tag&amp;rdquo; content to make it skip-able.&lt;/p>
&lt;p>If you&amp;rsquo;re interested in how I&amp;rsquo;m developing this blog - it&amp;rsquo;s fairly simple but
does require a bit of a technical background - e.g. more than creating an
account on &lt;a href="https://www.blogger.com/">Blogger&lt;/a> or (ugh) &lt;a href="https://medium.com/">Medium&lt;/a>. I&amp;rsquo;m using &lt;a href="https://gohugo.io/">Hugo&lt;/a>, a self-hosted
site-generation platform that uses &lt;a href="https://www.markdownguide.org/">Markdown&lt;/a> files and in my case, is hosted
directly on &lt;a href="https://gohugo.io/hosting-and-deployment/hosting-on-github/">Github Pages&lt;/a>.&lt;/p>
&lt;p>If you&amp;rsquo;re interested in creating your own similar blog, take a look at the &lt;a href="https://gohugo.io/getting-started/quick-start/">Hugo &amp;ldquo;Quick Start&amp;rdquo;&lt;/a>. Cheers!&lt;/p></description></item></channel></rss>